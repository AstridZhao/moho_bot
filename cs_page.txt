bachelor arts computer science mount holyoke collegeskip main site navigationskip main contentdirectorynews storiesathleticseventsinformation forcurrent studentsalumsparents familiesfacultystafffive college studentsnew studentsgiveacademicsfind programstem mount holyokethe arts mount holyokeenhance learninginternational learningafter mount holyokeacademic centers facilitiesacademic support resourcesfaculty mentorshipresearch excellence opportunitydegrees graduation requirementsfaculty accomplishmentsadmission financial aidundergraduategraduatevisiting connecting mount holyokeinclusive admissionstudent experienceliving campuscampus experiencecommunity belongingbeyond campusathleticswhy mount holyokealum network supportat glancediversity equity inclusionmission administrationnews storiessustainabilitywe mount holyokewhy womens collegesearchacademicsfind program computer science computer scienceundergraduatecomputer science exciting field applications many disciplines across humanities social sciences sciences main role computer scientist problem solver degree computer science signifies formal training computational analytical approaches problem solving well skills necessary develop software tackle new challenges computational approaches applied wide spectrum problems including protein folding flexibility modeling forecasting bird migration improving capabilities search engines retrieve relevant documents understanding connectedness provided social networks impact lives lead supporting scientists management analysis data collect morecomputer science facultycomputer science researchprogram overviewproblem solving computer science starts identification challenge planning spacecraft trajectory enabling swarm robots deliver pizza finding best possible answers web query computer science program constructed build conceptual understanding skills necessary computational problem solving curriculum engages core topics range learning program building computer systems using boolean algebra developing software methodologies ensure robust programs analyzing algorithms correctness cost cocurricular activities programs including embedded peer mentoring introductory level seek support students cultivating community learningcomputer scientists also develop analyze algorithms reach biology chemistry physics economics business transforming mathematical research provide new tools media art music program informationprogram typemajorminoroutcome bachelor arts departmentdepartment computer sciencethe importance liberal arts study computer sciencestrong communication collaboration skills ability think broadly flexibly set graduates apart graduates pursue industry positions technology giants found startups study competitive graduate schools including carnegie mellon stanford mit brownwhy study computer sciencewe living midst revolution powered computers infused throughout almost aspects society — communication transportation medical commerce entertainment — name fewbeyond daily interactions may social networks smartphones technology impacted fields scientific research often uses experimentation done computer models rather real world climate change research example uses computer models possible design carry experiment evaluate effects carbon emissions environmentmedicine medical research rely extensively computers drug discovery research example involves studying computer models proteins viruses drugs prior actually synthesizing experimenting potential drugsthe discipline computer sciencecomputer science studies solve problems computers problem solving viewed many angleslogic describe solution problem precisely computer device core execute extremely simple instructions quickly execute italgorithms compose logical steps together solve problem efficiently prove mathematically algorithm correctabstraction problems solved computers tend large complicated developing abstractions allow computer scientist decompose problem smaller pieces solve pieces individually combine results form comprehensive solutioncomputability problems solvable computers currently things easy people still difficult computers even problems know never solved computers still problems simple algorithms algorithms would take many years calculate solutions problems realistic size know problem intractablebeyond essential elements computational thinking computer science encompasses many specialized fields including information retrieval software engineering computational geometry computer graphics animation computer architecture networking programming languages robotics community voices spotlight computer science students alumsgo previous slidego next slide forging bonds start shirley chisholm livinglearning community qiana pierre ’ 23 sheher launching career path first year mount holyoke liz sevigny ’ 23 theythem space express wil abamdepass ’ 23 sheherexplore storiesstudying computer science mount holyokeselecting courses first yearinterested getting started computer sciencethe computer science department offers multiple ways begin study computer science students considering cs major curious cs looking introduction programmingintensivefor considering major minor computer scienceif interested major minor computer science recommended entry point comsc151 offering programmingintensive course introducing use computers problemsolving tool variety comsc151 offerings example comsc151aacomsc151ar comsc151ds comsc151hc comsc151md cover essential material differing motivating examplessome semesters department offers alternative slightly slowerpaced entry point major minor comsc150 course followed comsc121 combination two equivalent comsc151students prior programming experience may take placement test determine eligibility skip start comsc205for cscuriousif interested exploring computer science less intensive programming experience department typically offers least one nonmajor course semester example comsc100 comsc106 comsc108 comsc109any member computer science faculty answer questions course studycourses requirementsintroductory courses focus fundamentals programming enabling students implement ideas approaches code intermediate advanced courses offer breadth depth areas computing systems artificial intelligence robotics networking algorithmslearning goalsmajor requirementsminor requirementscourseslearning goalslearning goalsthe computer science curriculum designed encourage students todevelop critical thinking skills solve problems designing implementing algorithmsdevelop analytical skills reasoning algorithmic complexitybe able design implement test document computer programs solve substantial computational problemsbuild skills developing working understanding complex code base ability effectively modify itbe able think multiple levels detail abstractiondevelop foundation allows encourages learning new relevant skills technologies field evolvesunderstand interplay theory practiceunderstand interplay software hardwarebe able communicate clearly written oral formbe able work effectively teammore specifically students expected master following conceptscomputer programming — including working knowledge least two programming languages different paradigmsdata structures ability use implement fundamental abstract data types including queues stacks balanced search trees hash tables graphsabstraction manage complexityrecursion inductionalgorithmic problemsolving ability design code analyze prove correctness algorithms using recursive divideandconquer dynamic programming greedy approachesthe conceptual organization computers—including computer architecture hardware level operating system issuesdata storage computerapplications computing understanding computers algorithms programs andor data structures used several application areasmajor requirementsrequirements majora minimum 40 creditscourse listcodetitlecreditscomputer science 36 creditscomsc151introduction computational problem solving 14comsc205data structures4comsc221introduction computing systems4comsc225software design development4comsc312algorithms4comsc322operating systems4three additional computer science courses 212two must 300 level 8 creditsthe third may either 200 level 300 level 4 credits 3mathematics 4 creditsmath232discrete mathematics 44humanities social sciences 5 6beyond used fulfill colleges distribution requirementsone additional designated humanities course 7one additional designated social science course 7total credits40 1 comsc151 offering example comsc151cp comsc151ds comsc151hc 2 independent study courses count electives 3 students may also count phil225 elective strong connection computer science 4 computer science majors elect mathematics statistics minor may count math232 credit mathematics statistics computer science 5 courses also count towards colleges outside major requirement towards requirements second major therefore counted directly toward credits required major 6 ungraded option elected declaration major courses used meet requirements 7 designated courses classified meet colleges applicable distribution requirementadditional specificationsthe skills abstract reasoning mathematics especially important computer science strongly recommended students take additional mathematics courses least math101 math102 math211 useful fields like machine learning computer graphicsstudents planning pursue advanced degree computer science include plans additional computer science courses independent research leading thesisminor requirementsrequirements minora minimum 20 creditscourse listcodetitlecreditscomputer sciencecomsc151introduction computational problem solving 1 24comsc205data structures 34comsc225software design development4two additional computer science courses 8 credits including8one 300 levelthe second either 200 level 300 leveltotal credits20 1 comsc151 offering example comsc151cp comsc151ds comsc151hc 2 comsc150 plus comsc121 substitute comsc151 3 comsc205py plus comsc122 substitute comsc205coursescourse advicethe computer science department offers multiple ways begin study computer science suitable students considering computer science major minor may want use computing within another major curious computer science want start introduction programmingintensive students considering major minor computer science interested major minor computer science recommended entry point comsc151 offering programmingintensive course introducing use computers problemsolving tool variety comsc151 offerings example comsc151cp comsc151ds comsc151hc cover essential material differing motivating examples students prior programming experience may take placement test determine eligibility skip start comsc205for students interested programming undecided computer science major minorsome semesters department offers alternative entry point comsc150 course focuses core constructs used many programming languages include topic objectoriented programming student wishes continue computer science study comsc150 followed comsc161 combination two equivalent comsc151for student curious computer science students interested exploring computer science less emphasis programming department typically offers least one nonmajor course semester example comsc100 comsc106 comsc109course offeringscomsc100 computing digital worldspring credits 4an introduction basic computer science concepts lectures cover topics origins computing computer architecture artificial intelligence privacy security programming exercisesapplies requirements math sciencesh ponbarryadvisory prior study computer science expected students may take course computer science 106 150 151notes course count toward computer science major minorcomsc106 fundamentals applied computingnot scheduled year credits 4have ever used googles image search tool wondered search results found difficult computer see computer scientists actively researching approach challenge computer vision course introduce fundamentals applied computing using computer vision motivating theme students learn foundations programming python programming language working computational tools independentlyapplies requirements math sciencesa st john departmentadvisory prior study computer science expected students may take course computer science 100 150 151notes course count toward computer science major minorcomsc107 idesign learning labspring credits 2when charting path college beyond metacognitive framework provide scaffolding intentional reflection situated fimbel maker innovation lab course leverage tangible activities ground discussions factors strategies impact learning example embedding microcontroller create motionsensitive lights ballet skirt parallels cycle selfregulated learning prior experience electronics computer science assumed students work handson tutorials teach basics required develop interactive technology projectsa burnsnotes half semestercomsc109 idesign studiofall credits 4designers continually innovating ways incorporating technology todays world projections butterflies grammy performance dresses smart purses sense wallet missing recent emergence lowcost userfriendly components making new world design accessible broad community course students think critically products already marketplace given tools create designs sequence handson workshops electronics basics microcontroller programming provide surprisingly minimal level comfort background technology required produce prototypes designsapplies requirements math sciencesa burns st johncomsc112 topics computer science problem solvingcomsc112ae topics computer science ai ethicsfall credits 2artificial intelligence ai rapidly changing world way drive way communicate ethical implications changes course explore ethical challenges opportunities posed ai discuss topics data privacy fairness bias accountability transparency also examine role ai society potential impact values way lifeapplies requirements meets distribution requirementd uwacuadvisory prior knowledge ai requiredcomsc120 introduction rnot scheduled year credits 1an introduction programming language r used statistical analysis visualization data students learn write basic r programs read write manipulate data make use r functions executing common statistical analysis learn display results using graphs charts series projects students get experience writing functions learn make use r documentation extend knowledge languageapplies requirements meets distribution requirementthe departmentnotes creditno credit gradingcomsc121 objectoriented programmingnot scheduled year credits 1this course introduce objectoriented programming students foundation python programming interested continuing comsc205 data structures includes coverage classes objects methods subtypingapplies requirements meets distribution requirementthe departmentprereq comsc150 computer science placement test comsc122 java programming languagenot scheduled year credits 1this course teach java programming language students already programming ability another objectoriented programming languageapplies requirements meets distribution requirementthe departmentprereq comsc205py comsc132 engineering everyonenot scheduled year credits 4engineers change world live every day developing technologies influence nearly every aspect lives course study engineered things shape world live students engage teambased handson engineering design project brainstorming solutions contemporary problem building testing iterating design solutions process students learn basic programming fabrication skills reflect together ethics engineering design leave nuanced understanding ways technology society interact decides technologies matter good technological solution goodcrosslisted phys132applies requirements math sciencesthe departmentadvisory course prerequisites recommended students interested engineering technologynotes students interested continuing engineering nexus strongly recommended take coursecomsc133 topic problem solvingcomsc133dv data visualization design perceptionfall credits 4data visualizations graphs charts infographics everywhere creating data visualizations communicate effectively simple task introductory course students explore design influences ways data understood use craft effective visualizations different types data experience working data design data visualization expected students work series projects build skills semesterapplies requirements math sciencesa burnscomsc150 introduction computer sciencefall credits 4introduction field computer science introduces students python programming including algorithms basic data structures lists dictionaries programming techniques include objectoriented programmingapplies requirements math sciencesh ghoshnotes students pursuing computer science major minor data science major take comsc161 following course alternatively students may wish consider programmingintensive course comsc151comsc151 introduction computational problem solvingthematic introduction field computer science draws problems found thematic focus topics course topics courses within comsc151 cover concepts skills satisfy requirements computer science major minor well data science major course programmingintensive includes topic objectoriented programming students may wish consider comsc150 alternative entry point cover topic objectoriented programmingcomsc151cp introduction computational problem solving computing principlesfall spring credits 4introduces students algorithms basic data structures programming techniques students learn computing principles exploring problems drawn broad set domains cryptography data analysis gamesapplies requirements math sciencesa burns uwacu coreq comsc151cplcomsc151ds introduction computational problem solving big datanot scheduled year credits 4introduces students algorithms basic data structures programming techniques focuses data collection preparation analysis explores programming data manipulation presentation representation data ethics working data scaleapplies requirements math sciencesb lerner coreq comsc151dslcomsc151hc introduction computational problem solving humanities computingnot scheduled year credits 4introduces students algorithms basic data structures programming techniques students explore solving problems arise humanities disciplines various forms text analysis image manipulation animation sound manipulationapplies requirements math sciencesthe department coreq comsc151hclcomsc151sg introduction computational problem solving computing social goodnot scheduled year credits 4introduces students algorithms basic data structures programming techniques includes discussion ways computing improve human lives society improving accessibility people disabilities helping organize rescue team emergencyapplies requirements math sciencesb lerner coreq comsc151sglcomsc161 introduction computer science part 2 objectoriented programmingfall spring credits 2this course builds programming concepts learned comsc150 covering objectoriented programming introducing java programming languagea burnsprereq comsc150 placement test advisory students may take course computer science 151 getting started computer science recommend taking cs problem solving assessment access via gradescope entry code rwg253notes half semester combination comsc150 comsc161 serves alternate prerequisite route comsc205 data structurescomsc205 data structuresfall spring credits 4this course builds basic programming concepts learned computer science 151 shifting focus organization data order improve efficiency simplicity programs topics include study abstract data types data structures linked lists stacks queues binary trees course programmingintensive introduces java programming languageapplies requirements math sciencesb lerner rai st johnprereq one following 1 comsc151 grade c better 2 comsc161 grade c better 3 comsc150 grade c better comsc121 coreq comsc205ladvisory course taken students completed comsc201 comsc211comsc205py data structures pythonnot scheduled year credits 4this course builds basic programming concepts learned computer science 150 computer science 121 shifting focus organization data order improve efficiency simplicity programs topics include study abstract data types data structures linked lists stacks queues binary trees course programmingintensiveapplies requirements math sciencesthe departmentprereq comsc150 grade c better comsc121 comsc151 grade c better notes students taking course need take comsc122 java programming language continuing comsc225comsc221 introduction computing systemsfall spring credits 4this course looks inner workings computer computer systems introduction computer architecture specific topics include assembly language programming memory parallelism course programming intensiveapplies requirements math sciencesl ballesteros j mccauleyprereq comsc201 comsc205 comsc205py math232 coreq comsc221ladvisory department recommends require students take comsc225 prior comsc221comsc225 software design developmentfall spring credits 4building large software systems introduces new challenges software development appropriate design decisions programming methodology make major difference developing software correct maintainable course students learn techniques tools used build correct maintainable software improving skills designing writing debugging testing software topics include objectoriented design testing design patterns software architecture course programming intensiveapplies requirements math sciencesb lerner suprereq comsc205 grade c better comsc205py grade c better advisory students taken comsc215 may take comsc225comsc226 engineering robotic systemsnot scheduled year credits 4this intermediatelevel course presents handson introduction robotics student construct modify robot controlled arduinolike microcontroller topics include kinematics inverse kinematics controltheory sensors mechatronics motion planning material delivered one weekly lecture one weekly guided laboratory assignments include labpreparatory homework guided lab sessions outofclass projects build upon inclass sessions students access fimbel maker innovation lab fabricating demonstrating robotsapplies requirements math sciencesm surestrictions course limited firstyears sophomoresinstructor permission requiredprereq comsc150 comsc151 advisory use form apply permission httpstinyurlcomcomscpericomsc243 topiccomsc243hc topic humancomputer interactionspring credits 4humancomputer interaction hci multidisciplinary field exploring relationships people computers broad area includes study topics people interact technology design impacts people technology methodologies designing new techologies really works people class students learn apply humancentered design principles employ common research methods field explore recent literature fieldapplies requirements math sciencesa burnsprereq comsc205 may take concurrently prereq comsc205 may take concurrentlycomsc243hr topic humanrobot interactionfall credits 4humanrobot interaction interdisciplinary field examines broad set questions robots designed interact humans eg educational assistive service robots behavior appearance robot change humans perceive interact design program robots natural trustworthy effective course students learn algorithmic foundations interactive robots gain experience building evaluating interactive robots read present scholarly research papers class time split lecture presentations students discussions handson activitiesapplies requirements math sciencesh ponbarryprereq comsc205 comsc205py comsc243st topic introduction search technologiesnot scheduled year credits 4the vast amount unstructured structured data web organizational databases increased need approaches processing large volumes text analyses help researchers businesses gain insights would otherwise resource timeconsuming manually issues much consumer expected spend particular context rise hate groups impact social media newly discovered manuscript may attributed course students introduced tools techniques used gain insights mapreduce sentiment analysis context natural language processing search technologies eg googleapplies requirements math sciencesl ballesterosprereq comsc150 comsc151 advisory waitlisted please fill form httpsformsglejzik4ka2vczvxkyi9comsc243sw topic computing systems workshopnot scheduled year credits 4beneath polished surface highlevel programming languages like python consumer devices like gaming consoles smartphones lie elemental parts computer systems elements like hardware components operating systems digital logic course use handson approach combining hardware software way understanding systems low level students chance construct various tangible projects using raspberry pi computers access fimbel maker innovation lab specific topics touch low level data representation sound generation classic nintendo entertainment systemapplies requirements math sciencesj mccauleyprereq comsc150 comsc151 comsc295 independent studyfall spring credits 1 4the departmentinstructor permission requiredcomsc311 theory computationspring credits 4are limits computers answer question depend whether use pc mac c powerful pascal seminar explores questions investigating several models computation illustrating power limitations models relating computational problems applications topics include finite state automata pushdown automata grammars turing machines universal turing machine computabilityapplies requirements math sciencesa st johnprereq comsc201 comsc205 math232 advisory waitlisted please fill form httpsformsglejzik4ka2vczvxkyi9comsc312 algorithmsfall spring credits 4how google maps find best route two locations computers help decode human genome heart complex computer applications nontrivial algorithms algorithms must specialized application standard ways approaching algorithmic problems tend useful many applications among topics explore graph algorithms greedy algorithms divideandconquer dynamic programming network flow students learn recognize apply strategies well evaluate expected runtime costs algorithms designapplies requirements math sciencesd raiprereq comsc201 comsc205 comsc205py math232 advisory use form apply permission httpstinyurlcomcomscpericomsc316 developing innovative softwarespring credits 4tired writing programs nobody ever uses course many people come novel ideas software lack resources ability develop software students apply programming skills develop deliver software based requirements client students learn critical communication skills required work client work teams classmates experience software lifecycle requirements elicitation delivery students synthesize many topics learned prior courses well explore new technologies required complete specific project programming intensiveapplies requirements math sciencesb lernerprereq comsc215 comsc225 comsc322 operating systemsfall spring credits 4an introduction issues involved orchestrating use computer resources topics include operating system evolution memory management virtual memory resource scheduling multiprogramming deadlocks concurrent processes protection design principles course emphasis understanding implications os design programs run write ie security performance etc course programming intensiveapplies requirements math sciencesb lerner j mccauleyprereq comsc221 either comsc211 comsc225 comsc334 artificial intelligencenot scheduled year credits 4artificial intelligence field grown humble beginnings science fiction become one broadest fields computer science encompassing incredibly wide array topics one common threads topics build computer systems exhibit logic reason rather build systems solve problems intelligently without resorting brute force well cover major topics course notably search logical reasoning planning well game playingtheory uncertain reasoning graphical models course programming intensiveapplies requirements math sciencesl ballesterosinstructor permission requiredprereq comsc225 math232 advisory apply permission using form httpsformsglenar9xsgtdrjpbzel7comsc335 machine learningfall credits 4how neflix learn movies person likes computers read handwritten addresses packages detect faces images machine learning practice programming computers learn improve experience becoming pervasive technology science course cover mathematical underpinnings algorithms practices enable computer learn topics include supervised learning unsupervised learning evaluation methodology bayesian probabilistic modeling students learn program matlab python apply course skills solve real world prediction pattern recognition problems programming intensiveapplies requirements math sciencesd raiprereq grade c better one comsc205 comsc205py comsc211 math232 calculus course math101 math102 math203 advisory preference given computer science seniors need final 300level elective data science seniorscomsc341 topicscomsc341cc topics compiler designnot scheduled year credits 4principles practices design implementation compilers interpreters cover stages compilation execution process lexical analysis parsing symbol tables type systems scope semantic analysis intermediate representations runtime environments interpreters code generation program analysis optimization garbage collection students construct full compilerapplies requirements math sciencesthe departmentinstructor permission requiredprereq comsc221 comsc225 comsc312 comsc341cv topics computer visionfall credits 4this course provides introduction image analysis 3d interpretation image data uncovers mystery behind standard techniques image processing like filtering edge detection stereo vision flow etc math lovers course throughout semester student develop computer vision library programming assignments furthermore students learn newer advanced machinelearningbased computer vision algorithmsapplies requirements math sciencesy suprereq comsc205 comsc205py math211 calculus math101 math102 math203 grade c better comsc341gp topics game programmingnot scheduled year credits 4video games fun play interesting challenging program involving elements useful programming sorts systems well incorporate graphics audio animation must model relatively complex systems often relatively strict requirements timing course explore techniques behind game implementation implementing course programming gaming intensiveapplies requirements math sciencesj mccauleyinstructor permission requiredprereq comsc225 either math100 equivalent indicated math placement test completion higher level math course advisory use form apply permission httpstinyurlcomcomscpericomsc341nl topics natural language processingnot scheduled year credits 4this course provides introduction natural language processing discipline enabling computers process understand human language learn fundamental techniques automated text speech analysis understanding insights linguistics students get handson practice implementing computational algorithms reading scholarly research articles design carry independent final projectapplies requirements math sciencesh ponbarryinstructor permission requiredprereq comsc225 math232 calculus course math101 math102 math203 advisory use form apply permission httpstinyurlcomcomscpericomsc341np topics intro networking architecture protocolsnot scheduled year credits 4this course introduction computer networking focus internet high level emphasize concepts principles contributed internets success scaling modest beginnings system used half worlds population low level survey techniques technologies protocols underlie networks well key protocols built atop networks specific topics include layering routing addressing reliable delivery congestion control dns http othersapplies requirements math sciencesj mccauleyprereq comsc221 comsc312 advisory waitlisted please fill form httpsformsglejzik4ka2vczvxkyi9comsc341rp topics robotics planning algorithmsspring credits 4robotics planning fundamental skill developing autonomous robots course introduce students fundamental concepts algorithms robotics planning students learn apply concepts learned data structures implement analyze performance popular planning algorithms students also learn advancements gaps exist today robotics navigation manipulation collaborationapplies requirements math sciencesd uwacuprereq comsc205 may taken concurrently prereq comsc205 may taken concurrentlyadvisory course ideal students interested developing autonomous robots also good course students interested learning latest advancements robotics planning researchcomsc341te topics text technologies data sciencefall credits 4this course focuses text analysis technologies look challenges working massive amounts unstructured vs semistructured vs structured data context explore ways statistical analyses applied things like search categorization eg spam filtering recommender systems plagiarism detection hidden message findingapplies requirements math sciencesl ballesterosprereq comsc205 comsc211 comsc343 programming language design implementationnot scheduled year credits 4ever wonder many semicolons java programs would mean language objectoriented course explore issues related design implementation programming languages along way discover answers questions topics include syntax semantics runtime support languages well introduction functional programmingapplies requirements math sciencesb lernerprereq comsc225 advisory waitlisted please fill form httpsformsglejzik4ka2vczvxkyi9comsc395 independent studyfall spring credits 1 8the departmentinstructor permission requiredcontact usdepartment computer sciencethe department computer science teaches students examine one extreme core question computed whether combination algorithms computers lead intelligence computersciencemtholyokeedu 4135382420200 clapp laboratorycomputer science faculty staffnext stepsapply mount holyokemount holyoke seeks intellectually curious applicants understand value liberal arts education driven love learning womens college gender diverse welcome applications female trans nonbinary studentsstart applicationfinancing educationeveryone ’ financial situation unique ’ make sure cost get way exceptional educationaffording mount holyoketuition feesexplore related undergraduate programsengineeringdualdegree engineering programsdata science50 college streetsouth hadley 01075 usa4135382000academicsadmission financial aidstudent experiencewhy mount holyokegivingdirectoryeventsacademic calendarathleticscareerscampus mapconsumer informationconnect usinstagramfacebooklinkedintwitteryoutubenondiscrimination policymount holyoke college women ’ college gender diverse college committed providing equal access opportunity employment education employees students compliance state federal law mount holyoke college discriminate basis race ethnicity color genetic information sex national ethnic origin religion age physical mental disability marital status sexual orientation pregnancy gender identity expression ancestry veteran military status legally protected status federal state local lawcopyright © 2021 trustees mount holyoke collegedigital privacy statementterms useland acknowledgement statementaccessibility barriers form